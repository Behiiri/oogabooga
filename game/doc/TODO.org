#+TITLE: Quests and Bounties
#+STARTUP: indent
#+TODO: TODO(t) INPROGRESS(p) INSPECT(i) | DONE(d) FIXED(f) VERIFY(v) CANCELLED(c) DEFERRED(w) INVALID(n)

* Quests
** TODO add health to player character
** TODO add xp
** DONE add kill count
** TODO add weapon pickups
** TODO add skills
** TODO add win and lose conditions
** DONE increase monster HP and show damage numbers
** DONE add debug mode to the game
** DONE add entity data view for debug mode
** TODO add collision for monsters and Implement better movement for them
** DONE add icon for current weapon

* Bounties
** INVALID after using special bullet, the range change gets applied to normal bullets too.
I think this has nothing to do with special bullets
** TODO tank bullets apply damage more than once (each frame that it collides with a monster)
I can have a list of bullets or monsters that collide and ignore them when checking for collision,
but this feels so unnecessary and inefficient
bullets can have a list of monsters
or monsters can have a list of bullets
what is the alternative?
** FIXED pickups collide with bullets
bullets was checking all entities, now they just check monsters
** TODO repositioning monster can put monsters on a position that needs repositioning again
so sometimes the repositioning can happen more then 10 times for a monster
** FIXED tank bullet can miss on obb, even when two sprites clearly overlap
I forgot to apply scale for sprites, now it works OK.
** INVALID sometimes fire rate pickup wraps the fire rate value (sets it to 2 or 4?)
the whole fire rate logic is wacky and I think it needs reimplementation in a robust way
actully changing the weapon reset the fire rate to 2... design might change, so I'm going to leave it as is.
** TODO the tank bullets travels at speed of the selected gun
I just need to add a seperate data structure and logic for all the special bullets and ablities
** TODO bullets position is not centered
when firing to the right (u = 1,0) the bullets pos.y is same as the mause_y, I need to subtract half the size
of sprite from it's position, but I'm not sure how this will affect rotation and collisions
